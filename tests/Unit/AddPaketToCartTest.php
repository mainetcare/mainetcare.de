<?php

namespace Tests\Unit;

use App\Exceptions\BookingException;
use App\Factories\AngebotFactory;
use App\Factories\AppartementFactory;
use App\Factories\PferdepensionFactory;
use App\Jobs\ProcessAddAngebotToCart;
use App\Jobs\ProcessAddAppartementToCart;
use App\Jobs\ProcessAddPaketToCart;
use App\Jobs\ProcessInitPaketInCart;
use App\Models\Angebot;
use App\Models\Appartement;
use App\Models\Cart;
use App\Models\Fitness;
use App\Models\Paket;
use App\Models\Pferdepension;
use Carbon\Carbon;
use Illuminate\Foundation\Testing\Concerns\InteractsWithDatabase;
use Illuminate\Foundation\Testing\DatabaseMigrations;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\CreatesModels;
use Tests\TestCase;
use Tests\DBSwitcher;

class AddPaketToCartTest extends TestCase {

    use CreatesModels, RefreshDatabase, InteractsWithDatabase;

    /**
     * @var Paket|null
     */
    public $model = null;


    public function setUp(): void {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->model = $this->createTestpaket();
    }

    /**
     * @test
     */
    public function it_can_save_the_basic_data_for_the_paket() {
        $model      = $this->model;
        $cart       = Cart::create( [

        ] );
        $checkin    = new Carbon( '2.10.2020' );
        $teilnehmer = 4;
        $gaeste     = 2;
        app( ProcessInitPaketInCart::class, [
            'arrSelection' => [
                'checkin'    => $checkin,
                'paket'      => $model,
                'teilnehmer' => $teilnehmer,
                'gaeste'     => $gaeste,
                'cart'       => $cart,
            ]
        ] )->handle();
        $cart = Cart::find( 1 );
        $this->assertEquals( 4, $cart->teilnehmer );
        $this->assertEquals( 2, $cart->gaeste );
        $this->assertEquals( 7, $cart->nights );
        $this->assertEquals( '09.10.2020', $cart->checkout->format( 'd.m.Y' ) );
        $this->assertEquals( 'Testpaket', $cart->items()->first()->title );
    }


}
