<?php

namespace Tests\Unit;

use App\Exceptions\BookingException;
use App\Factories\AngebotFactory;
use App\Factories\AppartementFactory;
use App\Factories\PferdepensionFactory;
use App\Jobs\ProcessAddAngebotToCart;
use App\Jobs\ProcessAddAppartementToCart;
use App\Jobs\ProcessAddPaketAppartementToCart;
use App\Jobs\ProcessAddPaketToCart;
use App\Jobs\ProcessInitPaketInCart;
use App\Models\Angebot;
use App\Models\Appartement;
use App\Models\Cart;
use App\Models\Fitness;
use App\Models\Paket;
use App\Models\Pferdepension;
use Carbon\Carbon;
use Illuminate\Foundation\Testing\Concerns\InteractsWithDatabase;
use Illuminate\Foundation\Testing\DatabaseMigrations;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\CreatesModels;
use Tests\TestCase;
use Tests\DBSwitcher;

class AddPaketAppartementToCartTest extends TestCase {

    use CreatesModels, RefreshDatabase, InteractsWithDatabase;

    /**
     * @var Paket|null
     */
    public $paket = null;
    /**
     * @var Appartement
     */
    protected $appartement;


    public function setUp(): void {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->paket       = $this->createTestpaket();
        $this->appartement = $this->createTestappartement();
    }

    /**
     * @test
     */
    public function it_can_add_appartement_to_cart() {
        $cart = Cart::create( [
            'checkin'  => '2.10.2020',
            'checkout' => '9.10.2020',
        ] );

        app( ProcessAddPaketAppartementToCart::class, [
            'arrSelection' => [
                'cart'          => $cart,
                'paket'         => $this->paket,
                'appartement'   => $this->appartement,
                'teilnehmer'    => 2,
                'begleitperson' => 2,
            ]
        ] )->handle();

        $this->assertEquals( 1, $cart->items()->count() );
    }

    /**
     * @test
     */
    public function it_can_add_a_discount_price_if_rabatt_is_active() {
        $cart = Cart::create( [
            'checkin'  => '2.10.2020',
            'checkout' => '9.10.2020',
        ] );
        $rabatt = $this->createTestRabatt();
        app( ProcessAddPaketAppartementToCart::class, [
            'arrSelection' => [
                'cart'          => $cart,
                'paket'         => $this->paket,
                'appartement'   => $this->appartement,
                'teilnehmer'    => 1,
                'begleitperson' => 0,
                'rabatt' => $rabatt,
            ]
        ] )->handle();

        // 500 Basispreis + 15% Einzelzimmerzuschlag = 575, davon 15% Rabatt = 488.75

        $this->assertEquals( 488.75, $cart->items()->first()->total );
    }


}
