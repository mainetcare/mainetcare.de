<?php

namespace Tests\Feature;

use App\Models\Appartement;
use App\Services\BookingSessions\BookingSessionAppartement;
use Illuminate\Foundation\Testing\Concerns\InteractsWithSession;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Http\ResponseTrait;
use Tests\CreatesModels;
use Tests\TestCase;

class BookingSessionAppartementValidationTest extends TestCase
{

    use CreatesModels, RefreshDatabase, InteractsWithSession;

    public function setUp(): void {
        parent::setUp(); // TODO: Change the autogenerated stub
        // app(BookingSessionRouter::class)->setActiveSession(app(BookingSessionAppartement::class));
    }

    /**
     * @test
     */
    public function step_appartementwahl_must_have_basic_booking_data() {
        $session = new BookingSessionAppartement();
        $session->setStep(1);

        $response = $this->get('/appartement-buchen/appartementwahl');

        // We are redirected to Step 1 to pick a new Appartement:
        $response->assertRedirect('/');

    }

    /**
     * @test
     */
    public function step_2_needs_an_appartement_in_cart() {
        // Given a Cart and State is in Step 2
        $session = new BookingSessionAppartement();
        $session->setStep(2);
        $cart = $this->createCartForUrlaubInAppartementGoldfever();
        $session->setCart($cart);

        // When we delete an appartement:
        $cart->items()->where('class', Appartement::class)->delete();

        // And we are trying to get to Step 3:
        $response = $this->get(route('wellness-select.index'));

        // We are redirected to Step 1 to pick a new Appartement:
        $response->assertRedirect(route('appartement-select.index'));
    }

}
