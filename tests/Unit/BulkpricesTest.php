<?php

namespace Tests\Unit;

use App\Exceptions\BookingException;
use App\Factories\AngebotFactory;
use App\Factories\AppartementFactory;
use App\Factories\PferdepensionFactory;
use App\Models\Angebot;
use App\Models\Appartement;
use App\Models\Fitness;
use App\Models\Pferdepension;
use App\Services\BulkPrices;
use Carbon\Carbon;
use Illuminate\Foundation\Testing\Concerns\InteractsWithDatabase;
use Illuminate\Foundation\Testing\DatabaseMigrations;
use Tests\CreatesModels;
use Tests\TestCase;
use Tests\DBSwitcher;

class BulkpricesTest extends TestCase {

    use DBSwitcher, CreatesModels, DatabaseMigrations, InteractsWithDatabase;

    /**
     * @var Angebot|null
     */
    public $model = null;

    public function createAngebotSauna() {
        return app( AngebotFactory::class )->initBySlug( 'gym-und-sauna' );
    }


    public function setUp(): void {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->model = $this->createTestangebot();
    }

    /**
     * @test
     */
    public function it_can_get_staffelpreise_by_unit_and_variant() {

        $unit = 'tag';

        $this->model = $this->createTestangebot();
        $bulkprices = new BulkPrices($this->model, $unit);

        $this->assertEquals(15, $bulkprices->getPrices()->first()->get('preis'));

        $this->model = $this->createTestangebot();
        $bulkprices = new BulkPrices($this->model, $unit, 'Variante1');

        $this->assertEquals(10, $bulkprices->getPrices()->first()->get('preis'));

        $unit = 'paket';
        $bulkprices = new BulkPrices($this->model, $unit);

        $this->assertEquals(100, $bulkprices->getPrices()->first()->get('preis'));

    }

    /**
     * @test
     */
    public function if_the_unit_of_a_pricelist_is_unique_the_variant_doesent_matter() {
        $unit = 'foo'; // foo has Variant 'Bar'
        $this->model = $this->createTestangebot();
        $bulkprices = new BulkPrices($this->model, $unit);
        $this->assertEquals(10, $bulkprices->getPrices()->first()->get('preis'));
    }

    /**
     * @test
     */
    public function it_can_get_staffel_by_amount() {

        $unit = 'tag';
        $amount = 8;
        $this->model = $this->createTestangebot();
        $bulkprices = new BulkPrices($this->model, $unit);

        $this->assertEquals(12, $bulkprices->getPriceByAmount($amount)->get('preis'));

        $amount = 14;

        $this->assertEquals(10, $bulkprices->getPriceByAmount($amount)->get('preis'));

    }

    /**
     * @test
     */
    public function bulkprices_can_have_a_special_multiplier() {
        $unit = 'paket';
        $this->model = $this->createTestangebot();
        $bulkprices = new BulkPrices($this->model, $unit);
        $this->assertEquals('Pferd', $bulkprices->getMultiplier());
    }

    /**
     * @test
     */
    public function bulkprices_can_have_no_multiplier() {
        $unit = 'person';
        $this->model = $this->createTestangebot();
        $bulkprices = new BulkPrices($this->model, $unit);
        $this->assertEquals(false, $bulkprices->hasMultiplier());
    }

    /**
     * @test
     */
    public function it_can_have_a_variant_name() {
        $this->model = app( AngebotFactory::class )->initBySlug( 'quad' );

        $unit = 'person';

        $bulkprices = new BulkPrices($this->model, $unit);
        $this->assertEquals('Beifahrer', $bulkprices->getVariant());

        $unit = 'std';
        $bulkprices = new BulkPrices($this->model, $unit);
        $this->assertEquals(false, $bulkprices->hasVariant());

    }




}
