<?php

namespace Tests\Unit;

use App\Jobs\ProcessAddAppartementToCart;
use App\Models\Angebot;
use App\Models\Cart;
use Carbon\Carbon;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\CreatesModels;
use Tests\TestCase;

class AddAppartementToCartTest extends TestCase {

    use CreatesModels, RefreshDatabase;

    /**
     * @var Angebot|null
     */
    public $model = null;


    public function setUp(): void {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->model = $this->createTestappartement();
    }

    /**
     * @test
     */
    public function it_can_add_the_appartement_with_given_amount() {
        $cart = $this->addAppartement();
        $this->assertEquals( '6202e338-76f2-441a-bd1c-a08e40d17750', $cart->items()->first()->model_id );
    }

    /**
     * @test
     */
    public function it_adds_pauschalpreise_to_the_cart() {
        $cart = $this->addAppartement();
        $this->assertEquals( 100, $cart->pauschalen()->first()->total );
    }

    /**
     * @return Cart
     */
    protected function addAppartement() {
        $appartement = $this->model;
        $checkin     = Carbon::now();
        $checkout    = $checkin->copy()->addDays( 4 );
        $cart        = Cart::create( [
            'checkin'  => $checkin,
            'checkout' => $checkout,
        ] );
        app( ProcessAddAppartementToCart::class, [
            'arrSelection' => [
                'gaeste'      => 2,
                'appartement' => $appartement,
                'cart'        => $cart,
            ]
        ] )->handle();

        return $cart;
    }

    /**
     * @test
     */
    public function it_can_add_a_discount_price_if_rabatt_is_active() {
        $appartement = $this->model;
        $checkin     = Carbon::now();
        $checkout    = $checkin->copy()->addDays( 1 );

        $cart   = Cart::create( [
            'checkin'  => $checkin,
            'checkout' => $checkout,
        ] );
        $rabatt = $this->createTestRabatt();
        app( ProcessAddAppartementToCart::class, [
            'arrSelection' => [
                'gaeste'      => 1,
                'appartement' => $appartement,
                'cart'        => $cart,
                'rabatt'      => $rabatt
            ]
        ] )->handle();

        $this->assertEquals( 170, $cart->items()->first()->total );
    }


}
