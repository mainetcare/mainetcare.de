<?php

namespace Tests\Feature;

use App\Services\BookingSessions\BookingSessionAppartement;
use App\Services\BookingSessions\BookingSessionPaket;
use App\Services\BookingSessions\BookingSessionRouter;
use App\Services\BookingSessionValidator;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\CreatesModels;
use Tests\TestCase;

class BookingSessionPaketTest extends TestCase {

    use CreatesModels, RefreshDatabase;

    public function setUp(): void {
        parent::setUp(); // TODO: Change the autogenerated stub
        // app(BookingSessionRouter::class)->setActiveSession(app(BookingSessionAppartement::class));
    }

    /**
     * @test
     */
    public function a_cart_is_unique_per_session() {
        $a = new BookingSessionPaket();
        $b = new BookingSessionPaket();
        $this->assertEquals( $a->cart()->id, $b->cart()->id );
    }


    /**
     * @test
     */
    public function a_booking_session_has_different_steps() {
        $a = new BookingSessionPaket();
        $a->incStep();
        $this->assertEquals( 2, $a->step() );
        $a->decStep();
        $this->assertEquals( 1, $a->step() );
        $a->setStep( 3 );
        $this->assertEquals( 3, $a->step() );
    }

    /**
     * @test
     */
    public function each_step_has_a_assigned_route() {
        $a = new BookingSessionPaket();
        $a->setStepByRoute(route('paket-pferdepension-select.index'));
        $this->assertEquals( 2, $a->step() );
    }

}
